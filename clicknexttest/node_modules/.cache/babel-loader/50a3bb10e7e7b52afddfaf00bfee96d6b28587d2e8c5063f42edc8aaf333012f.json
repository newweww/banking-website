{"ast":null,"code":"// ...\n\nuseEffect(() => {\n  const fetchBalance = async () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const decodedToken = jwtDecode(token);\n      const user_id = decodedToken.unique_name;\n      setUserId(user_id);\n      try {\n        const result = await axios.get(`https://localhost:7186/api/Users/`);\n        if (result.data && result.data.length > 0) {\n          setBalance(prevBalance => result.data[0].balance); // Use functional form\n          setValue(prevValue => ({\n            ...prevValue,\n            amount: 0,\n            remain: result.data[0].balance\n          }));\n        }\n      } catch (error) {\n        console.error('Error fetching balance:', error);\n      }\n    } else {\n      console.error('JWT token not found in local storage');\n    }\n  };\n  fetchBalance();\n}, [userId]);\nconst handleSubmit = async e => {\n  e.preventDefault();\n  if (withdraw <= 0) {\n    alert('Withdrawal amount must be greater than zero.');\n    return;\n  }\n  if (withdraw > balance) {\n    alert('Insufficient funds.');\n    return;\n  }\n  const currentDatetime = new Date().toISOString();\n  const newBalance = balance - withdraw;\n  setValue(prevValue => ({\n    ...prevValue,\n    datetime: currentDatetime,\n    amount: withdraw,\n    remain: newBalance,\n    user_id: userId\n  }));\n  console.log('New Balance:', newBalance);\n  try {\n    await axios.post('https://localhost:7186/api/Transactions', value);\n    await axios.patch(`https://localhost:7186/api/Users/${userId}`, {\n      balance: newBalance\n    });\n\n    // Update the balance state after the patch request\n    setBalance(prevBalance => newBalance);\n    console.log('User balance updated successfully.');\n    alert('Withdrawal successful.');\n    navigate('/home');\n  } catch (error) {\n    console.error('Error during withdrawal:', error);\n    alert('Withdrawal failed. Please try again.');\n  }\n};\n\n// ...","map":{"version":3,"names":["useEffect","fetchBalance","token","localStorage","getItem","decodedToken","jwtDecode","user_id","unique_name","setUserId","result","axios","get","data","length","setBalance","prevBalance","balance","setValue","prevValue","amount","remain","error","console","userId","handleSubmit","e","preventDefault","withdraw","alert","currentDatetime","Date","toISOString","newBalance","datetime","log","post","value","patch","navigate"],"sources":["C:/Users/ASUS/Desktop/New folder/clicknexttest/clicknexttest/src/component/withdraw.js"],"sourcesContent":["// ...\r\n\r\nuseEffect(() => {\r\n    const fetchBalance = async () => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        if (token) {\r\n            const decodedToken = jwtDecode(token);\r\n            const user_id = decodedToken.unique_name;\r\n            setUserId(user_id);\r\n\r\n            try {\r\n                const result = await axios.get(`https://localhost:7186/api/Users/`);\r\n                if (result.data && result.data.length > 0) {\r\n                    setBalance(prevBalance => result.data[0].balance);  // Use functional form\r\n                    setValue(prevValue => ({\r\n                        ...prevValue,\r\n                        amount: 0,\r\n                        remain: result.data[0].balance,\r\n                    }));\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching balance:', error);\r\n            }\r\n        } else {\r\n            console.error('JWT token not found in local storage');\r\n        }\r\n    };\r\n\r\n    fetchBalance();\r\n}, [userId]);\r\n\r\nconst handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (withdraw <= 0) {\r\n        alert('Withdrawal amount must be greater than zero.');\r\n        return;\r\n    }\r\n\r\n    if (withdraw > balance) {\r\n        alert('Insufficient funds.');\r\n        return;\r\n    }\r\n\r\n    const currentDatetime = new Date().toISOString();\r\n\r\n    const newBalance = balance - withdraw;\r\n\r\n    setValue(prevValue => ({\r\n        ...prevValue,\r\n        datetime: currentDatetime,\r\n        amount: withdraw,\r\n        remain: newBalance,\r\n        user_id: userId\r\n    }));\r\n\r\n    console.log('New Balance:', newBalance);\r\n\r\n    try {\r\n        await axios.post('https://localhost:7186/api/Transactions', value);\r\n        await axios.patch(`https://localhost:7186/api/Users/${userId}`, { balance: newBalance });\r\n\r\n        // Update the balance state after the patch request\r\n        setBalance(prevBalance => newBalance);\r\n\r\n        console.log('User balance updated successfully.');\r\n        alert('Withdrawal successful.');\r\n        navigate('/home');\r\n    } catch (error) {\r\n        console.error('Error during withdrawal:', error);\r\n        alert('Withdrawal failed. Please try again.');\r\n    }\r\n};\r\n\r\n// ...\r\n"],"mappings":"AAAA;;AAEAA,SAAS,CAAC,MAAM;EACZ,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAIF,KAAK,EAAE;MACP,MAAMG,YAAY,GAAGC,SAAS,CAACJ,KAAK,CAAC;MACrC,MAAMK,OAAO,GAAGF,YAAY,CAACG,WAAW;MACxCC,SAAS,CAACF,OAAO,CAAC;MAElB,IAAI;QACA,MAAMG,MAAM,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAE,mCAAkC,CAAC;QACnE,IAAIF,MAAM,CAACG,IAAI,IAAIH,MAAM,CAACG,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;UACvCC,UAAU,CAACC,WAAW,IAAIN,MAAM,CAACG,IAAI,CAAC,CAAC,CAAC,CAACI,OAAO,CAAC,CAAC,CAAE;UACpDC,QAAQ,CAACC,SAAS,KAAK;YACnB,GAAGA,SAAS;YACZC,MAAM,EAAE,CAAC;YACTC,MAAM,EAAEX,MAAM,CAACG,IAAI,CAAC,CAAC,CAAC,CAACI;UAC3B,CAAC,CAAC,CAAC;QACP;MACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACnD;IACJ,CAAC,MAAM;MACHC,OAAO,CAACD,KAAK,CAAC,sCAAsC,CAAC;IACzD;EACJ,CAAC;EAEDrB,YAAY,CAAC,CAAC;AAClB,CAAC,EAAE,CAACuB,MAAM,CAAC,CAAC;AAEZ,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;EAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;EAElB,IAAIC,QAAQ,IAAI,CAAC,EAAE;IACfC,KAAK,CAAC,8CAA8C,CAAC;IACrD;EACJ;EAEA,IAAID,QAAQ,GAAGX,OAAO,EAAE;IACpBY,KAAK,CAAC,qBAAqB,CAAC;IAC5B;EACJ;EAEA,MAAMC,eAAe,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EAEhD,MAAMC,UAAU,GAAGhB,OAAO,GAAGW,QAAQ;EAErCV,QAAQ,CAACC,SAAS,KAAK;IACnB,GAAGA,SAAS;IACZe,QAAQ,EAAEJ,eAAe;IACzBV,MAAM,EAAEQ,QAAQ;IAChBP,MAAM,EAAEY,UAAU;IAClB1B,OAAO,EAAEiB;EACb,CAAC,CAAC,CAAC;EAEHD,OAAO,CAACY,GAAG,CAAC,cAAc,EAAEF,UAAU,CAAC;EAEvC,IAAI;IACA,MAAMtB,KAAK,CAACyB,IAAI,CAAC,yCAAyC,EAAEC,KAAK,CAAC;IAClE,MAAM1B,KAAK,CAAC2B,KAAK,CAAE,oCAAmCd,MAAO,EAAC,EAAE;MAAEP,OAAO,EAAEgB;IAAW,CAAC,CAAC;;IAExF;IACAlB,UAAU,CAACC,WAAW,IAAIiB,UAAU,CAAC;IAErCV,OAAO,CAACY,GAAG,CAAC,oCAAoC,CAAC;IACjDN,KAAK,CAAC,wBAAwB,CAAC;IAC/BU,QAAQ,CAAC,OAAO,CAAC;EACrB,CAAC,CAAC,OAAOjB,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChDO,KAAK,CAAC,sCAAsC,CAAC;EACjD;AACJ,CAAC;;AAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}