{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\New folder\\\\clicknexttest\\\\clicknexttest\\\\src\\\\component\\\\deposit.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Deposit = () => {\n  _s();\n  const [deposit, setDeposit] = useState(0);\n  const [time, setTime] = useState('');\n  const [balance, setBalance] = useState(0);\n  const [userId, setUserId] = useState();\n  const [value, setValue] = useState({\n    datetime: '',\n    action: 'deposit',\n    amount: 0,\n    remain: 0,\n    user_id: 0\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        const decodedToken = jwtDecode(token);\n        const user_id = decodedToken.unique_name;\n        setUserId(user_id);\n        const currentTime = new Date().toISOString();\n        setTime(currentTime);\n        console.log(currentTime);\n        try {\n          const result = await axios.get(`https://localhost:7186/api/Users/`);\n          if (result.data && result.data.length > 0) {\n            setBalance(result.data[0].balance);\n            setValue(prevValue => ({\n              ...prevValue,\n              amount: 0,\n              remain: result.data[0].balance\n            }));\n          }\n        } catch (error) {\n          console.error('Error fetching balance:', error);\n        }\n      } else {\n        console.error('JWT token not found in local storage');\n      }\n    };\n    fetchBalance();\n  }, [userId]);\n  useEffect(() => {\n    // Log the updated time whenever it changes\n    console.log('Updated time:', time);\n  }, [time]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (deposit <= 0) {\n      alert('Amount must be greater than zero.');\n      return;\n    }\n    const balanceInt = parseInt(balance);\n    const depositInt = parseInt(deposit);\n    const newBalance = balanceInt + depositInt;\n    setValue(prevValue => ({\n      ...prevValue,\n      datetime: time,\n      // Use the updated time state\n      amount: deposit,\n      remain: newBalance,\n      user_id: userId\n    }));\n    console.log(value);\n    try {\n      await axios.post('https://localhost:7186/api/Transactions', value);\n      await axios.put(`https://localhost:7186/api/Users/${userId}`, {\n        balance: newBalance\n      });\n      console.log('User balance updated successfully.');\n      console.log('New Balance:', newBalance);\n      alert('Deposit successful.');\n      navigate('/home');\n    } catch (error) {\n      console.error('Error during deposit:', error);\n      alert('Deposit failed. Please try again.');\n    }\n  };\n  const handleDeposit = value => {\n    setDeposit(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"border w-50 p-3 \",\n        style: {\n          justifyContent: 'center',\n          textAlign: 'center',\n          margin: 'auto'\n        },\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"mb-3 mt-3 \",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            class: \"form-control\",\n            id: \"deposit\",\n            placeholder: \"Enter Money\",\n            onChange: e => handleDeposit(e.target.value),\n            name: \"Money\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-success\",\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(Deposit, \"J0JWJRgWIBiEzM503scQ/UN/Rnc=\", false, function () {\n  return [useNavigate];\n});\n_c = Deposit;\nexport default Deposit;\nvar _c;\n$RefreshReg$(_c, \"Deposit\");","map":{"version":3,"names":["axios","React","useEffect","useState","useNavigate","jwtDecode","jsxDEV","_jsxDEV","Deposit","_s","deposit","setDeposit","time","setTime","balance","setBalance","userId","setUserId","value","setValue","datetime","action","amount","remain","user_id","navigate","fetchBalance","token","localStorage","getItem","decodedToken","unique_name","currentTime","Date","toISOString","console","log","result","get","data","length","prevValue","error","handleSubmit","e","preventDefault","alert","balanceInt","parseInt","depositInt","newBalance","post","put","handleDeposit","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","justifyContent","textAlign","margin","onSubmit","class","type","id","placeholder","onChange","target","name","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/New folder/clicknexttest/clicknexttest/src/component/deposit.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nconst Deposit = () => {\r\n    const [deposit, setDeposit] = useState(0);\r\n    const [time, setTime] = useState('');\r\n    const [balance, setBalance] = useState(0);\r\n    const [userId, setUserId] = useState();\r\n    const [value, setValue] = useState({\r\n        datetime: '',\r\n        action: 'deposit',\r\n        amount: 0,\r\n        remain: 0,\r\n        user_id: 0,\r\n    });\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchBalance = async () => {\r\n            const token = localStorage.getItem('token');\r\n\r\n            if (token) {\r\n                const decodedToken = jwtDecode(token);\r\n                const user_id = decodedToken.unique_name;\r\n                setUserId(user_id);\r\n\r\n                const currentTime = new Date().toISOString();\r\n                setTime(currentTime);\r\n                console.log(currentTime);\r\n\r\n                try {\r\n                    const result = await axios.get(`https://localhost:7186/api/Users/`);\r\n                    if (result.data && result.data.length > 0) {\r\n                        setBalance(result.data[0].balance);\r\n                        setValue((prevValue) => ({\r\n                            ...prevValue,\r\n                            amount: 0,\r\n                            remain: result.data[0].balance,\r\n                        }));\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error fetching balance:', error);\r\n                }\r\n            } else {\r\n                console.error('JWT token not found in local storage');\r\n            }\r\n        };\r\n\r\n        fetchBalance();\r\n    }, [userId]);\r\n\r\n    useEffect(() => {\r\n        // Log the updated time whenever it changes\r\n        console.log('Updated time:', time);\r\n    }, [time]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (deposit <= 0) {\r\n            alert('Amount must be greater than zero.');\r\n            return;\r\n        }\r\n\r\n        const balanceInt = parseInt(balance);\r\n        const depositInt = parseInt(deposit);\r\n        const newBalance = balanceInt + depositInt;\r\n\r\n        setValue((prevValue) => ({\r\n            ...prevValue,\r\n            datetime: time, // Use the updated time state\r\n            amount: deposit,\r\n            remain: newBalance,\r\n            user_id: userId,\r\n        }));\r\n\r\n        console.log(value);\r\n\r\n        try {\r\n            await axios.post('https://localhost:7186/api/Transactions', value);\r\n            await axios.put(`https://localhost:7186/api/Users/${userId}`, {\r\n                balance: newBalance,\r\n            });\r\n\r\n            console.log('User balance updated successfully.');\r\n            console.log('New Balance:', newBalance);\r\n            alert('Deposit successful.');\r\n            navigate('/home');\r\n        } catch (error) {\r\n            console.error('Error during deposit:', error);\r\n            alert('Deposit failed. Please try again.');\r\n        }\r\n    };\r\n\r\n    const handleDeposit = (value) => {\r\n        setDeposit(value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h1>Deposit</h1>\r\n                <form className='border w-50 p-3 ' style={{ justifyContent: 'center', textAlign: 'center', margin: 'auto' }} onSubmit={handleSubmit}>\r\n                    <div class=\"mb-3 mt-3 \">\r\n                        <input type=\"text\" class=\"form-control\" id=\"deposit\" placeholder=\"Enter Money\" onChange={(e) => handleDeposit(e.target.value)}  name=\"Money\" />\r\n                    </div>\r\n                    <div>\r\n                        <button className='btn btn-outline-success'>Confirm</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Deposit;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}