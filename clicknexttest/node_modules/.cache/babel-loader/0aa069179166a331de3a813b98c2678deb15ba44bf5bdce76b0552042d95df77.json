{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\New folder\\\\clicknexttest\\\\clicknexttest\\\\src\\\\component\\\\withdraw.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Withdraw = () => {\n  _s();\n  const [withdraw, setWithdraw] = useState(0);\n  const [balance, setBalance] = useState(0);\n  const [userId, setUserId] = useState();\n  const [value, setValue] = useState({\n    datetime: \"\",\n    action: 'withdraw',\n    amount: 0,\n    remain: 0,\n    user_id: 0\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        const decodedToken = jwtDecode(token);\n        const user_id = decodedToken.unique_name;\n        setUserId(user_id);\n        try {\n          const result = await axios.get(`https://localhost:7186/api/Users/`);\n          if (result.data && result.data.length > 0) {\n            setBalance(result.data[0].balance);\n            setValue(prevValue => ({\n              ...prevValue,\n              amount: 0,\n              remain: result.data[0].balance\n            }));\n          }\n        } catch (error) {\n          console.error('Error fetching balance:', error);\n        }\n      } else {\n        console.error('JWT token not found in local storage');\n      }\n    };\n    fetchBalance();\n  }, [userId]);\n  useEffect(() => {\n    // Trigger API call when value changes\n    const updateBalance = async () => {\n      try {\n        await axios.post('https://localhost:7186/api/Transactions', value);\n        await axios.patch(`https://localhost:7186/api/Users/updatebalance/${userId}`, {\n          id: userId,\n          balance: value.remain,\n          // Use value.remain instead of newBalance\n          name: 'new'\n        });\n        console.log('User balance updated successfully.');\n        console.log('New Balance:', value.remain);\n        alert('Withdrawal successful.');\n        navigate('/home');\n      } catch (error) {\n        console.error('Error during withdrawal:', error);\n        alert('Withdrawal failed. Please try again.');\n      }\n    };\n    updateBalance();\n  }, [value, userId, navigate]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (withdraw <= 0) {\n      alert('Withdrawal amount must be greater than zero.');\n      return;\n    }\n    if (withdraw > balance) {\n      alert('Insufficient funds.');\n      return;\n    }\n    const currentDatetime = new Date().toISOString();\n    const newBalance = balance - withdraw;\n    setValue({\n      ...value,\n      datetime: currentDatetime,\n      amount: withdraw,\n      remain: newBalance,\n      user_id: userId\n    });\n  };\n  const handleWithdraw = value => {\n    setWithdraw(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Withdraw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"border w-50 p-3 \",\n        style: {\n          justifyContent: 'center',\n          textAlign: 'center',\n          margin: 'auto'\n        },\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3 mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"Withdraw\",\n            placeholder: \"Enter Money\",\n            onChange: e => handleWithdraw(e.target.value),\n            name: \"Money\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-success\",\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n_s(Withdraw, \"krzbujrc6/QNUVAuWqyo3QbeWYk=\", false, function () {\n  return [useNavigate];\n});\n_c = Withdraw;\nexport default Withdraw;\nvar _c;\n$RefreshReg$(_c, \"Withdraw\");","map":{"version":3,"names":["axios","React","useEffect","useState","useNavigate","jwtDecode","jsxDEV","_jsxDEV","Withdraw","_s","withdraw","setWithdraw","balance","setBalance","userId","setUserId","value","setValue","datetime","action","amount","remain","user_id","navigate","fetchBalance","token","localStorage","getItem","decodedToken","unique_name","result","get","data","length","prevValue","error","console","updateBalance","post","patch","id","name","log","alert","handleSubmit","e","preventDefault","currentDatetime","Date","toISOString","newBalance","handleWithdraw","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","justifyContent","textAlign","margin","onSubmit","type","placeholder","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/New folder/clicknexttest/clicknexttest/src/component/withdraw.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nconst Withdraw = () => {\r\n    const [withdraw, setWithdraw] = useState(0);\r\n    const [balance, setBalance] = useState(0);\r\n    const [userId, setUserId] = useState();\r\n    const [value, setValue] = useState({\r\n        datetime: \"\",\r\n        action: 'withdraw',\r\n        amount: 0,\r\n        remain: 0,\r\n        user_id: 0\r\n    });\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchBalance = async () => {\r\n            const token = localStorage.getItem('token');\r\n\r\n            if (token) {\r\n                const decodedToken = jwtDecode(token);\r\n                const user_id = decodedToken.unique_name;\r\n                setUserId(user_id);\r\n\r\n                try {\r\n                    const result = await axios.get(`https://localhost:7186/api/Users/`);\r\n                    if (result.data && result.data.length > 0) {\r\n                        setBalance(result.data[0].balance);\r\n                        setValue(prevValue => ({\r\n                            ...prevValue,\r\n                            amount: 0,\r\n                            remain: result.data[0].balance,\r\n                        }));\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error fetching balance:', error);\r\n                }\r\n            } else {\r\n                console.error('JWT token not found in local storage');\r\n            }\r\n        };\r\n\r\n        fetchBalance();\r\n    }, [userId]);\r\n\r\n    useEffect(() => {\r\n        // Trigger API call when value changes\r\n        const updateBalance = async () => {\r\n            try {\r\n                await axios.post('https://localhost:7186/api/Transactions', value);\r\n\r\n                await axios.patch(`https://localhost:7186/api/Users/updatebalance/${userId}`, {\r\n                    id: userId,\r\n                    balance: value.remain, // Use value.remain instead of newBalance\r\n                    name: 'new'\r\n                });\r\n\r\n                console.log('User balance updated successfully.');\r\n                console.log('New Balance:', value.remain);\r\n                alert('Withdrawal successful.');\r\n                navigate('/home');\r\n            } catch (error) {\r\n                console.error('Error during withdrawal:', error);\r\n                alert('Withdrawal failed. Please try again.');\r\n            }\r\n        };\r\n\r\n        updateBalance();\r\n    }, [value, userId, navigate]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (withdraw <= 0) {\r\n            alert('Withdrawal amount must be greater than zero.');\r\n            return;\r\n        }\r\n\r\n        if (withdraw > balance) {\r\n            alert('Insufficient funds.');\r\n            return;\r\n        }\r\n\r\n        const currentDatetime = new Date().toISOString();\r\n\r\n        const newBalance = balance - withdraw;\r\n\r\n        setValue({\r\n            ...value,\r\n            datetime: currentDatetime,\r\n            amount: withdraw,\r\n            remain: newBalance,\r\n            user_id: userId\r\n        });\r\n    };\r\n\r\n    const handleWithdraw = (value) => {\r\n        setWithdraw(value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h1>Withdraw</h1>\r\n                <form className='border w-50 p-3 ' style={{ justifyContent: 'center', textAlign: 'center', margin: 'auto' }} onSubmit={handleSubmit}>\r\n                    <div className=\"mb-3 mt-3\">\r\n                        <input type=\"text\" className=\"form-control\" id=\"Withdraw\" placeholder=\"Enter Money\" onChange={(e) => handleWithdraw(e.target.value)} name=\"Money\" />\r\n                    </div>\r\n                    <div>\r\n                        <button className='btn btn-outline-success'>Confirm</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Withdraw;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,CAAC;EACtC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC;IAC/Be,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,UAAU;IAClBC,MAAM,EAAE,CAAC;IACTC,MAAM,EAAE,CAAC;IACTC,OAAO,EAAE;EACb,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZ,MAAMsB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAE3C,IAAIF,KAAK,EAAE;QACP,MAAMG,YAAY,GAAGvB,SAAS,CAACoB,KAAK,CAAC;QACrC,MAAMH,OAAO,GAAGM,YAAY,CAACC,WAAW;QACxCd,SAAS,CAACO,OAAO,CAAC;QAElB,IAAI;UACA,MAAMQ,MAAM,GAAG,MAAM9B,KAAK,CAAC+B,GAAG,CAAE,mCAAkC,CAAC;UACnE,IAAID,MAAM,CAACE,IAAI,IAAIF,MAAM,CAACE,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;YACvCpB,UAAU,CAACiB,MAAM,CAACE,IAAI,CAAC,CAAC,CAAC,CAACpB,OAAO,CAAC;YAClCK,QAAQ,CAACiB,SAAS,KAAK;cACnB,GAAGA,SAAS;cACZd,MAAM,EAAE,CAAC;cACTC,MAAM,EAAES,MAAM,CAACE,IAAI,CAAC,CAAC,CAAC,CAACpB;YAC3B,CAAC,CAAC,CAAC;UACP;QACJ,CAAC,CAAC,OAAOuB,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACnD;MACJ,CAAC,MAAM;QACHC,OAAO,CAACD,KAAK,CAAC,sCAAsC,CAAC;MACzD;IACJ,CAAC;IAEDX,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,CAACV,MAAM,CAAC,CAAC;EAEZZ,SAAS,CAAC,MAAM;IACZ;IACA,MAAMmC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMrC,KAAK,CAACsC,IAAI,CAAC,yCAAyC,EAAEtB,KAAK,CAAC;QAElE,MAAMhB,KAAK,CAACuC,KAAK,CAAE,kDAAiDzB,MAAO,EAAC,EAAE;UAC1E0B,EAAE,EAAE1B,MAAM;UACVF,OAAO,EAAEI,KAAK,CAACK,MAAM;UAAE;UACvBoB,IAAI,EAAE;QACV,CAAC,CAAC;QAEFL,OAAO,CAACM,GAAG,CAAC,oCAAoC,CAAC;QACjDN,OAAO,CAACM,GAAG,CAAC,cAAc,EAAE1B,KAAK,CAACK,MAAM,CAAC;QACzCsB,KAAK,CAAC,wBAAwB,CAAC;QAC/BpB,QAAQ,CAAC,OAAO,CAAC;MACrB,CAAC,CAAC,OAAOY,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDQ,KAAK,CAAC,sCAAsC,CAAC;MACjD;IACJ,CAAC;IAEDN,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,CAACrB,KAAK,EAAEF,MAAM,EAAES,QAAQ,CAAC,CAAC;EAE7B,MAAMqB,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAIpC,QAAQ,IAAI,CAAC,EAAE;MACfiC,KAAK,CAAC,8CAA8C,CAAC;MACrD;IACJ;IAEA,IAAIjC,QAAQ,GAAGE,OAAO,EAAE;MACpB+B,KAAK,CAAC,qBAAqB,CAAC;MAC5B;IACJ;IAEA,MAAMI,eAAe,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IAEhD,MAAMC,UAAU,GAAGtC,OAAO,GAAGF,QAAQ;IAErCO,QAAQ,CAAC;MACL,GAAGD,KAAK;MACRE,QAAQ,EAAE6B,eAAe;MACzB3B,MAAM,EAAEV,QAAQ;MAChBW,MAAM,EAAE6B,UAAU;MAClB5B,OAAO,EAAER;IACb,CAAC,CAAC;EACN,CAAC;EAED,MAAMqC,cAAc,GAAInC,KAAK,IAAK;IAC9BL,WAAW,CAACK,KAAK,CAAC;EACtB,CAAC;EAED,oBACIT,OAAA;IAAA6C,QAAA,eACI7C,OAAA;MAAA6C,QAAA,gBACI7C,OAAA;QAAA6C,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBjD,OAAA;QAAMkD,SAAS,EAAC,kBAAkB;QAACC,KAAK,EAAE;UAAEC,cAAc,EAAE,QAAQ;UAAEC,SAAS,EAAE,QAAQ;UAAEC,MAAM,EAAE;QAAO,CAAE;QAACC,QAAQ,EAAElB,YAAa;QAAAQ,QAAA,gBAChI7C,OAAA;UAAKkD,SAAS,EAAC,WAAW;UAAAL,QAAA,eACtB7C,OAAA;YAAOwD,IAAI,EAAC,MAAM;YAACN,SAAS,EAAC,cAAc;YAACjB,EAAE,EAAC,UAAU;YAACwB,WAAW,EAAC,aAAa;YAACC,QAAQ,EAAGpB,CAAC,IAAKM,cAAc,CAACN,CAAC,CAACqB,MAAM,CAAClD,KAAK,CAAE;YAACyB,IAAI,EAAC;UAAO;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnJ,CAAC,eACNjD,OAAA;UAAA6C,QAAA,eACI7C,OAAA;YAAQkD,SAAS,EAAC,yBAAyB;YAAAL,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC/C,EAAA,CAjHID,QAAQ;EAAA,QAWOJ,WAAW;AAAA;AAAA+D,EAAA,GAX1B3D,QAAQ;AAmHd,eAAeA,QAAQ;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}